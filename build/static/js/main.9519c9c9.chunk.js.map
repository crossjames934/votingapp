{"version":3,"sources":["components/AuthenticationSegment.js","components/MainMenu.js","components/Intro.js","components/PollMenu.js","components/Register.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["AuthenticationSegment","logout","axios","get","then","res","console","log","data","_this","props","updateParentState","authenticated","username","attemptedLogin","catch","e","alert","react_default","a","createElement","className","onClick","this","showRegister","showLogin","notAuthenticated","Component","MainMenu","visibleOptions","Object","toConsumableArray","widgets","filter","option","listItems","map","widget","widgetShowing","visibleWidgets","includes","liStyle","textShadow","cursor","toggleWidget","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","closeWidget","showWidget","bringMenuToFront","stop","apply","arguments","key","style","widgetStyle","order","display","showing","width","animation","concat","close","options","Intro","PollMenu","Register","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","password","email","handleChange","bind","assertThisInitialized","handleSubmit","setState","defineProperty","target","name","value","_this$state","post","response","status","preventDefault","spaceAround","justifyContent","margin","onSubmit","onChange","type","id","required","Login","failedMessage","_this2","loggedIn","message","setTimeout","loginForm","INTRO","MAINMENU","POLLMENU","App","stateObject","widgetName","containsMenu","otherWidgets","updateArray","unshift","_this3","orderOf","indexOf","components_AuthenticationSegment","components_MainMenu","components_Intro","components_PollMenu","components_Register","components_Login","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9519c9c9.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\nclass AuthenticationSegment extends Component {\n    logout = () => {\n        axios.get('/logout')\n            .then(res => {\n                console.log(res.data);\n                // this.props.updateAuthenticationStatus(false, \"\");\n                this.props.updateParentState({\n                    authenticated: false,\n                    username: \"\",\n                    attemptedLogin: false\n                });\n            })\n            .catch(e => {\n                alert(\"There was an error connecting, please check console for the error\");\n                console.log(e);\n            });\n    };\n\n    notAuthenticated() {\n        return(\n            <div className=\"authenticationLinks\">\n                <p className=\"clickableText\" onClick={this.props.showRegister}>Register</p>\n                <p> || </p>\n                <p className=\"clickableText\" onClick={this.props.showLogin}>Log In</p>\n            </div>\n        );\n    }\n\n    authenticated() {\n        return(\n            <div>\n                <p>Welcome {this.props.username}</p>\n                <p className=\"clickableText\" onClick={this.logout}>Sign Out</p>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.authenticated ? this.authenticated() : this.notAuthenticated()}\n            </div>\n        );\n    }\n}\n\nexport default AuthenticationSegment;","import React, {Component} from 'react';\n\nclass MainMenu extends Component {\n    options() {\n        let visibleOptions = [...this.props.widgets];\n        if (this.props.authenticated) {\n            visibleOptions = visibleOptions.filter(option => option !== \"login\" && option !== \"register\");\n        }\n        let listItems = visibleOptions.map(widget => {\n            const widgetShowing = this.props.visibleWidgets.includes(widget);\n            const liStyle = {\n                textShadow: widgetShowing ? \"0 0 2px gold\" : \"none\",\n                cursor: \"pointer\"\n            };\n            const toggleWidget = async () => {\n                await widgetShowing ?\n                    this.props.closeWidget(widget) :\n                    this.props.showWidget(widget);\n                this.props.bringMenuToFront();\n            };\n            return (\n                <li key={widget} onClick={toggleWidget} style={liStyle}>{widget}</li>\n            );\n        });\n        return(\n            <ul className={\"mainMenuOptions\"}>\n                {listItems}\n            </ul>\n        );\n    }\n\n    render() {\n        const widgetStyle = {\n            order: this.props.order,\n            display: (this.props.showing ? \"block\" : \"none\"),\n            width: \"30vw\",\n            animation: `appear 1s ease-out ${this.props.order*100}ms forwards`\n        };\n        return (\n            <div className={\"widget\"} style={widgetStyle}>\n                <div className={\"closeWidgetBtn\"}>\n                    <p onClick={this.props.close} className={\"innerX\"}>X</p>\n                </div>\n                <h2>Main Menu</h2>\n                {this.options()}\n            </div>\n        );\n    }\n}\n\nexport default MainMenu;","import React, {Component} from 'react';\n\nclass Intro extends Component {\n    render() {\n        const widgetStyle = {\n            order: this.props.order,\n            display: (this.props.showing ? \"block\" : \"none\"),\n            width: \"30vw\",\n            animation: `appear 1s ease-out ${this.props.order*100}ms forwards`\n        };\n        return (\n            <div className={\"widget\"} style={widgetStyle}>\n                <div className={\"closeWidgetBtn\"}>\n                    <p onClick={this.props.close} className={\"innerX\"}>X</p>\n                </div>\n                <h2>Welcome to Cross Voting</h2>\n                <p>Here you can make your own polls, and have your friends vote on them.</p>\n                <p>You can do all this without making an account, but if you want to make lots of polls you will need to register.</p>\n                <p>Registering is super easy, you can do it with a couple clicks if you use your Facebook or Google account.</p>\n                <p>You can also register using traditional means too.</p>\n            </div>\n        );\n    }\n}\n\nexport default Intro;","import React, {Component} from 'react';\n\nclass PollMenu extends Component {\n    // constructor(props) {\n    //     super(props);\n    //\n    // }\n\n    render() {\n        const widgetStyle = {\n            order: this.props.order,\n            display: (this.props.showing ? \"block\" : \"none\"),\n            animation: `appear 1s ease-out ${this.props.order*200}ms forwards`\n        };\n        return (\n            <div className={\"widget\"} style={widgetStyle}>\n                <div className={\"closeWidgetBtn\"}>\n                    <p onClick={this.props.close} className={\"innerX\"}>X</p>\n                </div>\n                <h2>Poll Menu</h2>\n            </div>\n        );\n    }\n}\n\nexport default PollMenu;","import React, {Component} from 'react';\nimport axios from 'axios';\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            password: \"\",\n            email: \"\"\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    handleSubmit(e) {\n        const { username, password, email } = this.state;\n        axios.post('/register', {username, password, email})\n            .then((response) => {\n                //handle success\n                if (response.status !== 200) {\n                    alert(\"There was a problem connecting to the server, see console for more information\");\n                    return console.log(response);\n                }\n                console.log(response.data);\n            })\n            .catch((response) => {\n                //handle error\n                alert(\"There was a problem connecting to the server, see console for more information\");\n                return console.log(response);\n            });\n        e.preventDefault();\n    }\n\n    render() {\n        const widgetStyle = {\n            order: this.props.order,\n            display: (this.props.showing ? \"block\" : \"none\"),\n            width: \"30vw\",\n            animation: `appear 1s ease-out ${this.props.order*100}ms forwards`\n        };\n        const spaceAround = {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            margin: '10px 0'\n        };\n        return (\n            <div className={\"widget\"} style={widgetStyle}>\n                <div className={\"closeWidgetBtn\"}>\n                    <p onClick={this.props.close} className={\"innerX\"}>X</p>\n                </div>\n                <h2>Register</h2>\n                <form onSubmit={this.handleSubmit}>\n                    <div style={spaceAround}>\n                        <p>Username:</p>\n                        <input\n                            onChange={this.handleChange}\n                            name=\"username\"\n                            type=\"text\"\n                            id=\"registeringUsername\"\n                            value={this.state.username}\n                            required\n                        />\n                    </div>\n                    <div style={spaceAround}>\n                        <p>Password:</p>\n                        <input\n                            onChange={this.handleChange}\n                            name=\"password\"\n                            type=\"password\"\n                            id=\"registeringPassword\"\n                            value={this.state.password}\n                            required\n                        />\n                    </div>\n                    <div style={spaceAround}>\n                        <p>Email:</p>\n                        <input\n                            onChange={this.handleChange}\n                            name=\"email\"\n                            type=\"email\"\n                            id=\"registeringEmail\"\n                            value={this.state.email}\n                            required\n                        />\n                    </div>\n                    <input className={\"submitBtn\"} type=\"submit\" value=\"Submit\"/>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Register;","import React, {Component} from 'react';\nimport axios from \"axios\";\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            password: \"\",\n            failedMessage: \"\"\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    handleSubmit(e) {\n        this.props.updateParentState({attemptedLogin: true});\n        this.setState({failedMessage: \"\"});\n        const { username, password } = this.state;\n        axios.post('/login', {username, password})\n            .then((response) => {\n                //handle success\n                if (response.status !== 200) {\n                    alert(\"There was a problem after connecting to the server, see console for more information\");\n                    return console.log(response);\n                }\n                if (response.data.loggedIn) {\n                    // update log in status of parent\n                    this.props.updateParentState({\n                        authenticated: true,\n                        username: response.data.message\n                    });\n                    // Must clear fields for cyber-security!\n                    this.setState({\n                        username: \"\",\n                        password: \"\"\n                    });\n                    // close widget after 2 seconds\n                    setTimeout(this.props.close, 2000);\n                } else {\n                    this.setState({failedMessage: response.data.message});\n                    this.props.updateParentState({attemptedLogin: false});\n                }\n            })\n            .catch((response) => {\n                //handle error\n                console.log(response);\n                this.setState({\n                    failedMessage: \"Trouble connecting to server. Potentially from loss of internet connection. See console for more details\"\n                });\n                this.props.updateParentState({attemptedLogin: false});\n            });\n        e.preventDefault();\n    }\n\n    attemptedLogin() {\n        const message = this.props.authenticated ? \"You have logged in successfully!\" : \"Please wait...\";\n        return(\n            <div>\n                <p>{message}</p>\n            </div>\n        );\n    }\n\n    loginForm() {\n        const spaceAround = {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            margin: '10px 0'\n        };\n        return(\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <div style={spaceAround}>\n                        <p>Username:</p>\n                        <input\n                            onChange={this.handleChange}\n                            name=\"username\"\n                            type=\"text\"\n                            id=\"loginUsername\"\n                            value={this.state.username}\n                            required\n                        />\n                    </div>\n                    <div style={spaceAround}>\n                        <p>Password:</p>\n                        <input\n                            onChange={this.handleChange}\n                            name=\"password\"\n                            type=\"password\"\n                            id=\"loginPassword\"\n                            value={this.state.password}\n                            required\n                        />\n                    </div>\n                    <input className={\"submitBtn\"} type=\"submit\" value=\"Submit\"/>\n                </form>\n            </div>\n        );\n    }\n\n    render() {\n        const widgetStyle = {\n            order: this.props.order,\n            display: (this.props.showing ? \"block\" : \"none\"),\n            width: \"30vw\",\n            animation: `appear 1s ease-out ${this.props.order*100}ms forwards`\n        };\n        return (\n            <div className={\"widget\"} style={widgetStyle}>\n                <div className={\"closeWidgetBtn\"}>\n                    <p onClick={this.props.close} className={\"innerX\"}>X</p>\n                </div>\n                <h2>Login</h2>\n                {this.props.attemptedLogin ? this.attemptedLogin() : this.loginForm()}\n                <p className={\"red\"}>{this.state.failedMessage}</p>\n            </div>\n        );\n    }\n}\n\nexport default Login;","// Dependencies\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './stylesheets/App.css';\n// import VotingImg from './images/voting.jpg';\n\n// My Modules\nimport AuthenticationSegment from './components/AuthenticationSegment';\nimport MainMenu from './components/MainMenu';\nimport Intro from './components/Intro';\nimport PollMenu from './components/PollMenu';\nimport Register from './components/Register';\nimport Login from './components/Login';\n\n// Global variables for string-references of widgets, for consistency and efficiency in development\nconst INTRO = \"Intro\";\nconst MAINMENU = \"Main Menu\";\nconst POLLMENU = \"Poll Menu\";\nconst REGISTER = \"Register\";\nconst LOGIN = \"Login\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            authenticated: false,\n            username: \"\",\n            visibleWidgets: [INTRO, POLLMENU],\n            attemptedLogin: false\n        };\n        this.closeWidget = this.closeWidget.bind(this);\n        this.showWidget = this.showWidget.bind(this);\n        this.updateParentState = this.updateParentState.bind(this);\n        this.bringMenuToFront = this.bringMenuToFront.bind(this);\n    }\n\n    componentDidMount() {\n        // Check if user is already logged in to display components accordingly (i.e. Welcome message)\n        axios.get('/whoami')\n            .then(res => {\n                if (res.data) {\n                    this.setState({authenticated: true, username: res.data});\n                }\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    updateParentState(stateObject) {\n        this.setState(stateObject);\n    }\n\n    closeWidget(widgetName) {\n        this.setState({visibleWidgets: this.state.visibleWidgets.filter(widget => widget !== widgetName)});\n    }\n\n    showWidget(widgetName) {\n        const containsMenu = this.state.visibleWidgets.includes(MAINMENU);\n        const otherWidgets = this.state.visibleWidgets.filter(widget => widget !== MAINMENU);\n        const updateArray = [widgetName, ...otherWidgets];\n        if (containsMenu) updateArray.unshift(MAINMENU);\n        this.setState({visibleWidgets: updateArray});\n    }\n\n    bringMenuToFront() {\n        const otherWidgets = this.state.visibleWidgets.filter(widget => widget !== MAINMENU);\n        this.setState({visibleWidgets: [MAINMENU, ...otherWidgets]});\n    }\n\n    render() {\n        // Everything in <main> is divided into 'widgets'\n        // Each widget displays according to a particular order, if at all\n        // The two function expressions below determine whether it is showing, and what order it is if so\n        // These are passed as props to each component, or 'widget'\n        const orderOf = widgetName => this.state.visibleWidgets.indexOf(widgetName);\n        const showing = widgetName => this.state.visibleWidgets.includes(widgetName);\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <p className={\"hamburgerIcon\"} onClick={() => { this.showWidget(MAINMENU) }}>&#9776;</p>\n                    <h1 id={\"mainTitle\"}>Voting App</h1>\n                    <AuthenticationSegment\n                        authenticated={this.state.authenticated}\n                        username={this.state.username}\n                        showRegister={() => this.showWidget(REGISTER)}\n                        showLogin={() => this.showWidget(LOGIN)}\n                        updateParentState={this.updateParentState}\n                    />\n                </header>\n                <main>\n                    <MainMenu\n                        widgets={[INTRO, POLLMENU, REGISTER, LOGIN]}\n                        order={orderOf(MAINMENU)}\n                        showing={showing(MAINMENU)}\n                        close={() => {this.closeWidget(MAINMENU)}}\n                        visibleWidgets={this.state.visibleWidgets}\n                        showWidget={this.showWidget}\n                        closeWidget={this.closeWidget}\n                        bringMenuToFront={this.bringMenuToFront}\n                        authenticated={this.state.authenticated}\n                    />\n                    <Intro\n                        order={orderOf(INTRO)}\n                        showing={showing(INTRO)}\n                        close={() => {this.closeWidget(INTRO)}}\n                    />\n                    <PollMenu\n                        order={orderOf(POLLMENU)}\n                        showing={showing(POLLMENU)}\n                        close={() => {this.closeWidget(POLLMENU)}}\n                    />\n                    <Register\n                        order={orderOf(REGISTER)}\n                        showing={showing(REGISTER)}\n                        close={() => {this.closeWidget(REGISTER)}}\n                    />\n                    <Login\n                        order={orderOf(LOGIN)}\n                        showing={showing(LOGIN)}\n                        close={() => {this.closeWidget(LOGIN)}}\n                        authenticated={this.state.authenticated}\n                        attemptedLogin={this.state.attemptedLogin}\n                        updateParentState={this.updateParentState}\n                    />\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}